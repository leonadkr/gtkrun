.TH @PROGRAM_NAME@ 1 "@PROGRAM_TIMESTAMP@" "@PROGRAM_NAME@ version @PROGRAM_VERSION@"
.SH NAME
@PROGRAM_NAME@ \- an application launcher.
.SH SYNOPSIS
.BR "@PROGRAM_NAME@ " [ OPTIONS ]
.SH DESCRIPTION
.B @PROGRAM_NAME@
launches applications in a graphical environment supported by GTK4. Just run
.B @PROGRAM_NAME@
when you are in X or Wayland (not tested). At start the program scans the history file (if
.B --no-history
is not set) and the environment variable
.I $PATH
for binary directories. If
.B --no-history
is not set, the program creates the history file (
.B "$XDG_CACHE_HOME/@PROGRAM_NAME@/@PROGRAM_HISTORY_FILE@"
or
.B "$HOME/.cache/@PROGRAM_NAME@/@PROGRAM_HISTORY_FILE@"
) containing the list of recently executed commands. It is a simple text file, you can modify it freely.
.PP
Start typing and the program will complete your command. Press
.I [Tab]
button to see the list of all completions. Just press
.I [Enter]
to execute command: either from the entry or from the list. Press
.I [Esc]
or
.I [Ctrl-q]
to terminate the program.
.SH OPTIONS
.BR \-s , \-\-silent
.RS 4
Do not show output of the executed command.
.RE
.P
.BR \-w ,
.B \-\-width
.I WIDTH
.RS 4
Set width of the window.
.RE
.P
.BR \-h ,
.B \-\-height
.I HEIGHT
.RS 4
Set height of the window.
.RE
.P
.BR \-m ,
.B \-\-max\-height
.I MAX_HEIGHT
.RS 4
Set maximum height of the window. If this option is set, option
.B \-\-height
is ignored. The window will adjust height, but not bigger than
.IR MAX_HEIGHT .
.RE
.P
.BR \-a ,
.B \-\-history-path
.I HISTORY_PATH
.RS 4
Set path to the history file. If not set, the program uses default:
.IR "$XDG_CACHE_HOME/@PROGRAM_NAME@/@PROGRAM_HISTORY_FILE@" " or " "$HOME/.cache/@PROGRAM_NAME@/@PROGRAM_HISTORY_FILE@" .
.RE
.P
.BR \-A ,
.B \-\-no\-history
.RS 4
Do not use any history file.
.RE
.P
.BR \-c ,
.B \-\-config
.I CONFIG_PATH
.RS 4
Set path to the configure file. If not set, the program uses default:
.IR "$XDG_CONFIG_HOME/@PROGRAM_NAME@/@PROGRAM_CONFIGURE_FILE@" " or " "$HOME/.config/@PROGRAM_NAME@/@PROGRAM_CONFIGURE_FILE@" .
.RE
.P
.BR \-C ,
.B \-\-no\-config
.RS 4
Do not use any configure file.
.RE
.SH CUSTOM CONFIG
You may create the textual configure file
.I $XDG_CONFIG_HOME/@PROGRAM_NAME@/@PROGRAM_CONFIGURE_FILE@
(or
.I $HOME/.config/@PROGRAM_NAME@/@PROGRAM_CONFIGURE_FILE@
), that will be scanned at the program start, or set
.B \-\-no-config
argument to ignore the configure file. Arguments added to the program will overwrite appropriate configure lines.
.P
Custom config example:
.P
.RS 4
.EX
[Main]
silent = false
width = 400
height = 200
max_height = 200
history-path = /path/to/history/file
no-history = false
.EE
.SH FILES
.IR $XDG_CONFIG_HOME/@PROGRAM_NAME@/@PROGRAM_CONFIGURE_FILE@ ", " $HOME/.config/@PROGRAM_NAME@/@PROGRAM_CONFIGURE_FILE@
.RS 4
stores configuration of the program, read at start if
.B \-\-no-config
is not set; 
.RE
.P
.IR $XDG_CACHE_HOME/@PROGRAM_NAME@/@PROGRAM_HISTORY_FILE@ ", " $HOME/.cache/@PROGRAM_NAME@/@PROGRAM_HISTORY_FILE@
.RS 4
stores recently executed commands, read at start if
.B \-\-no-history
is not set, you can freely modify this textual file;
.RE
.SH AUTHOR
@PROGRAM_AUTHOR@
